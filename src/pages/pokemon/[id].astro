---
import Layout from "../../layouts/Layout.astro";

import PokemonCard from '../../components/PokemonCard.astro';
import { getPokemonsByIdOrName } from "../../lib/controllers/pokemonController";
import { type PokemonBig, type PokemonType, TypeColors, type PokemonSmall, totalNumOfPokemons } from "../../lib/models/pokemonModels";
import { capitalizeFirstLetter, mapId, mapWHPokemon } from "../../lib/utils/utils";
const {id} = Astro.params;

export async function getStaticPaths() {
    const paths = [];
    for (let i = 1; i <= totalNumOfPokemons; i++) { 
        paths.push({params: {id: i.toString()}});
    }
    return paths;
}

const pokemon : PokemonBig | undefined = await getPokemonsByIdOrName(id);
---

<Layout title={pokemon!.basicData.name}>

    <section class="flex flex-col justify-center items-center 
    mt-28">

    <div class="flex flex-col items-center text-center mb-12
      w-full rounded-2xl">
        <h2 class="text-4xl font-bold tracking-widest mb-4">{capitalizeFirstLetter(pokemon!.basicData.name)}</h2>
        <h3 class="text-xs tracking-widest mb-4">No. {mapId(pokemon!.basicData.id)}</h3>
        <img src={pokemon!.basicData.image} alt={pokemon!.basicData.name} 
        class="h-52 w-52" transition:name=`media-image-${pokemon!.basicData.name}`/>
        <div class="flex flex-col space-x-1 mt-1 p-1 gap-2">
            <span class="font-medium text-lg tracking-wide">Height: {mapWHPokemon(pokemon!.height)} m</span>
            <span class="font-medium text-lg tracking-wide">Weight: {mapWHPokemon(pokemon!.weight)} kg</span>
        </div>
        <div class="flex flex-row space-x-1 mt-1 p-1 gap-2">
            {pokemon?.basicData.types.map((types : PokemonType) => (
                <p class=` ${TypeColors[types.type.name]} 
                opacity-80 rounded text-white text-center 
                font-semibold text-lg tracking-wide p-1.5 ` 
                >{types.type.name}</p>
            ))}
        </div>
    </div>

    <div class="flex flex-col items-center text-center gap-4
    border rounded-2xl">

    <h2 class="text-4xl font-bold tracking-widest">Evoluciones</h2>

        <div class="flex flex-row flex-wrap gap-4">
            {
                pokemon?.evolutions?.length === 1 ?  
                <p>Este pok√©mon no tiene evolucionnes</p>
                :
                pokemon?.evolutions?.map((pokemon : PokemonSmall) => (
                <PokemonCard {pokemon}/>  
                ))
                }
        </div>
        
    </div>

    </section>

</Layout>

